@using WASM_App.Data
@inject DataService data
@inject SettingsService settings

<MudOverlay Visible="data.CurrentPersonEditing != null" DarkBackground="true">
    <MudPaper Class="pa-4"Width="400px">
        <MudPaper Elevation="0" Class="d-flex">
            <MudText>Editing Attendee #: @data.CurrentPersonEditing.AttendeeID</MudText>
            <MudSpacer />
            <MudIconButton Style="position: absolute; top: 0px; right: 0px" Icon="@Icons.Material.Outlined.Close" OnClick="@(() => data.StopEditing())" />
        </MudPaper>
        
        <MudTextField Immediate @bind-Value="data.CurrentPersonEditing.Name" @bind-Value:after=@(() => OnEdit.Invoke()) HelperText="Name"/>
        <MudNumericField Immediate @bind-Value="data.CurrentPersonEditing.Age" @bind-Value:after=@(() => OnEdit.Invoke()) HelperText="Age" />
        <MudSelect Immediate @bind-Value="data.CurrentPersonEditing.Gender" @bind-Value:after=@(() => OnEdit.Invoke()) HelperText="Gender">
            <MudSelectItem Value="@("Male")"></MudSelectItem>
            <MudSelectItem Value="@("Female")"></MudSelectItem>
            <MudSelectItem Value="@("Other")"></MudSelectItem>
        </MudSelect>
    </MudPaper>
</MudOverlay>

@code {
    [Parameter]
    public Action OnEdit { get; set; }

    protected override Task OnParametersSetAsync()
    {
        data.PersonEditingChange += (() => StateHasChanged());
        return base.OnParametersSetAsync();
    }
}